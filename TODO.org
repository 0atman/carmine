#+STARTUP: overview, hidestars
#+TAGS: urgent underway maybe waiting hammock next
* DOCS
** Split README stuff up into GitHub wiki pages.                       :next:
* API
** Pub/Sub reconnects support?                                      :waiting:
Waiting on Salvatore: https://github.com/antirez/redis/issues/420
Recall that reconnects would also require re-establishing p/subscriptions.
** More helper fns?
*** Transaction stuff
Helper(s) for mutli, watchers, etc.?

E.g. an atomic multi* helper to wrap some commands and auto-discard on a thrown
exception?

redis-clojure has some facilities like this, I think. Should be simple to
implement.

Likewise, watching should be trivial to impement with new Listener API.
* TESTS                                                              :urgent:
** Unit-test for all other commands (adapt from redis-clojure!!)     :urgent:
** Unit-test for sort* and Lua commands.                             :urgent:
Sort* test should be easily adaptable from redis-clojure
** Unit-test for very big requests (> output buffer size)            :urgent:
* PERFORMANCE
** Why is Jedis still so much faster than Carmine?
Profile and determine the exact bottlenecks. They may or may _not_ turn out to
be something we can (or even want to) fix.
** Experiment with alternative output stream type                     :maybe:
E.g. SocketChannel, unsynchronized output stream, even Jedis' own streams!

Refs:
http://www.evanjones.ca/software/java-bytebuffers.html
http://fastutil.dsi.unimi.it/docs/it/unimi/dsi/fastutil/io/FastBufferedOutputStream.htm
https://github.com/xetorthio/jedis/blob/master/src/main/java/redis/clients/util/RedisOutputStream.javal

UPDATE: Tried RedisOutputStream and didn't seem to have any benefit.
** send-request! implementation could be more efficient
Marginally so. Basically, we're currently calling (bytestring command-name) and
then getting its size _unnecessarily_. Both of these things _should_ be done
during defcommand.

The problem is that the Clojure reader doesn't support byte[]s, so passing the
pre-computed bytestrings is incredibly awkward.

Try find a way that isn't awkward.

UPDATE: Benchmarks show a pretty insignificant +/- 10ms saving per 10k requests
if a solution can be found. Probably not worth the effort/complication.
* MISC
** Finalize pull-request to be added to official client list.      :underway:
** Officially announce.                                                :next:
